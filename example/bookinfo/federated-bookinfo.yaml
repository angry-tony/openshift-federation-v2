# Copyright 2017 Istio Authors
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

##################################################################################################
# Details service
##################################################################################################
---
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedNamespacePlacement
metadata:
  name: bookinfo
spec:
  clusterNames: {{ cluster_array }}
---  
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedService
metadata:
  name: details
  labels:
    app: details
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: details
---
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedServicePlacement
metadata:
  name: details
spec:
  clusterNames: {{ cluster_array }}
---  
apiVersion: core.federation.k8s.io/v1alpha1
kind: FderatedDeployment
metadata:
  name: details-v1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: details
        version: v1
    spec:
      containers:
      - name: details
        image: istio/examples-bookinfo-details-v1:1.8.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
---
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedDeploymentPlacement
metadata:
  name: details-v1
spec:
  clusterNames: {{ cluster_array }}
---  
##################################################################################################
# Ratings service
##################################################################################################
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedService
metadata:
  name: ratings
  labels:
    app: ratings
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: ratings
---
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedServicePlacement
metadata:
  name: ratings
spec:
  clusterNames: {{ cluster_array }}    
---
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedDeployment
metadata:
  name: ratings-v1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: ratings
        version: v1
    spec:
      containers:
      - name: ratings
        image: istio/examples-bookinfo-ratings-v1:1.8.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
---
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedDeploymentPlacement
metadata:
  name: ratings-v1
spec:
  clusterNames: {{ cluster_array }}        
---
##################################################################################################
# Reviews service
##################################################################################################
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedService
metadata:
  name: reviews
  labels:
    app: reviews
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: reviews
---
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedServicePlacement
metadata:
  name: reviews
spec:
  clusterNames: {{ cluster_array }}    
---
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedDeployment
metadata:
  name: reviews-v1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: reviews
        version: v1
    spec:
      containers:
      - name: reviews
        image: istio/examples-bookinfo-reviews-v1:1.8.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
---
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedDeploymentPlacement
metadata:
  name: reviews-v1
spec:
  clusterNames: {{ cluster_array }}        
---
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedDeployment
metadata:
  name: reviews-v2
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: reviews
        version: v2
    spec:
      containers:
      - name: reviews
        image: istio/examples-bookinfo-reviews-v2:1.8.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
---
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedDeploymentPlacement
metadata:
  name: reviews-v2
spec:
  clusterNames: {{ cluster_array }}        
---
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedDeployment
metadata:
  name: reviews-v3
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: reviews
        version: v3
    spec:
      containers:
      - name: reviews
        image: istio/examples-bookinfo-reviews-v3:1.8.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
---
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedDeploymentPlacement
metadata:
  name: reviews-v3
spec:
  clusterNames: {{ cluster_array }}        
---
##################################################################################################
# Productpage services
##################################################################################################
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedService
metadata:
  name: productpage
  labels:
    app: productpage
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: productpage
---
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedServicePlacement
metadata:
  name: productpage
spec:
  clusterNames: {{ cluster_array }}
---
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedDeployment
metadata:
  name: productpage-v1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: productpage
        version: v1
    spec:
      containers:
      - name: productpage
        image: istio/examples-bookinfo-productpage-v1:1.8.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
---
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedDeploymentPlacement
metadata:
  name: productpage-v1
spec:
  clusterNames: {{ cluster_array }}
---
#######################################
# ingress gateway                     #
#######################################
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederationDeployment
metadata:
  labels:
    app: bookinfo-ingressgateway
    chart: gateways-1.0.1
    heritage: Tiller
    istio: ingressgateway
    release: istio-remote
  name: bookinfo-ingressgateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bookinfo-ingressgateway
      istio: bookinfo-ingressgateway
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: bookinfo-ingressgateway
        istio: bookinfo-ingressgateway
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - ppc64le
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - s390x
            weight: 2
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
      containers:
      - args:
        - proxy
        - router
        - -v
        - "4"
        - --discoveryRefreshDelay
        - 1s
        - --drainDuration
        - 45s
        - --parentShutdownDuration
        - 1m0s
        - --connectTimeout
        - 10s
        - --serviceCluster
        - istio-ingressgateway
        - --zipkinAddress
        - {{ zipking_address }}:9411
        - --statsdUdpAddress
        - {{ statsd_address }}:9125
        - --proxyAdminPort
        - "15000"
        - --controlPlaneAuthPolicy
        - NONE
        - --discoveryAddress
        - {{ pilot_address }}:8080
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: ISTIO_META_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: gcr.io/istio-release/proxyv2:release-1.0-latest-daily
        imagePullPolicy: IfNotPresent
        name: istio-proxy
        ports:
        - containerPort: 80
          protocol: TCP
        - containerPort: 443
          protocol: TCP
        - containerPort: 31400
          protocol: TCP
        - containerPort: 15011
          protocol: TCP
        - containerPort: 8060
          protocol: TCP
        - containerPort: 853
          protocol: TCP
        - containerPort: 15030
          protocol: TCP
        - containerPort: 15031
          protocol: TCP
        resources:
          requests:
            cpu: 10m
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/certs
          name: istio-certs
          readOnly: true
        - mountPath: /etc/istio/ingressgateway-certs
          name: ingressgateway-certs
          readOnly: true
        - mountPath: /etc/istio/ingressgateway-ca-certs
          name: ingressgateway-ca-certs
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: istio-ingressgateway-service-account
      serviceAccountName: istio-ingressgateway-service-account
      terminationGracePeriodSeconds: 30
      volumes:
      - name: istio-certs
        secret:
          defaultMode: 420
          optional: true
          secretName: istio.istio-ingressgateway-service-account
      - name: ingressgateway-certs
        secret:
          defaultMode: 420
          optional: true
          secretName: istio-ingressgateway-certs
      - name: ingressgateway-ca-certs
        secret:
          defaultMode: 420
          optional: true
          secretName: istio-ingressgateway-ca-certs
---
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedDeploymentPlacement
metadata:
  name: bookinfo-ingressgateway
spec:
  clusterNames: {{ cluster_array }}          
---
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedServiceAccount
metadata:
  labels:
    app: ingressgateway
    chart: gateways-1.0.1
    heritage: Tiller
    release: istio-remote
  name: istio-ingressgateway-service-account
---
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedServiceAccountPlacement
metadata:
  name: istio-ingressgateway-service-account
spec:
  clusterNames: {{ cluster_array }}  
---
### TODO
# apiVersion: rbac.authorization.k8s.io/v1beta1
# kind: ClusterRoleBinding
# metadata:
#   name: istio-ingressgateway-istio-system
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: istio-ingressgateway-istio-system
# subjects:
#   - kind: ServiceAccount
#     name: istio-ingressgateway-service-account
#     namespace: {{ namespace }}
---
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedService
metadata:
  name: bookinfo-ingressgateway
  labels:
    chart: gateways-1.0.1
    release: istio-remote
    heritage: Tiller
    app: bookinfo-ingressgateway
    istio: ingressgateway
spec:
  type: LoadBalancer
  selector:
    app: bookinfo-ingressgateway
    istio: bookinfo-ingressgateway
  ports:
    -
      name: http2
      port: 80
      targetPort: 80
    -
      name: https
      port: 443
      targetPort: 443
    -
      name: tcp
      port: 31400
      targetPort: 31400
    -
      name: tcp-pilot-grpc-tls
      port: 15011
      targetPort: 15011
    -
      name: tcp-citadel-grpc-tls
      port: 8060
      targetPort: 8060
    -
      name: tcp-dns-tls
      port: 853
      targetPort: 853
    -
      name: http2-prometheus
      port: 15030
      targetPort: 15030
    -
      name: http2-grafana
      port: 15031
      targetPort: 15031
---
apiVersion: core.federation.k8s.io/v1alpha1
kind: FederatedServicePlacement
metadata:
  name: bookinfo-ingressgateway
spec:
  clusterNames: {{ cluster_array }}       
---
### TODO
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: bookinfo-ingressgateway-crt
spec:
  secretName: istio-ingressgateway-certs
  dnsNames:
  - bookinfo.{{ bookinfo_domain }}
  issuerRef:
    name: selfsigning-issuer
    # We can reference ClusterIssuers by changing the kind here.
    # The default value is Issuer (i.e. a locally namespaced Issuer)
    kind: ClusterIssuer   
---    
#######################################
# Destination rules                   #
#######################################
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: reviews
spec:
  host: reviews
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
  subsets:
  - name: v1
    labels:
      version: v1
  - name: v2
    labels:
      version: v2
  - name: v3
    labels:
      version: v3
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: ratings
spec:
  host: ratings
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
  subsets:
  - name: v1
    labels:
      version: v1
  - name: v2
    labels:
      version: v2
  - name: v2-mysql
    labels:
      version: v2-mysql
  - name: v2-mysql-vm
    labels:
      version: v2-mysql-vm
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: details
spec:
  host: details
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
  subsets:
  - name: v1
    labels:
      version: v1
  - name: v2
    labels:
      version: v2
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: productpage
spec:
  host: productpage
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
  subsets:
  - name: v1
    labels:
      version: v1     
---      
############################
# mTLS Policy              #
############################
apiVersion: "authentication.istio.io/v1alpha1"
kind: "Policy"
metadata:
  name: "mtls-bookinfo"
  namespace: "bookinfo"
spec:
  peers:
  - mtls: {}
  targets:
  - name: details
  - name: reviews
  - name: ratings
  - name: productpage
---
##########################
# Gateway  Policies      #
##########################
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: bookinfo-gateway
spec:
  selector:
    istio: bookinfo-ingressgateway
  servers:
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: SIMPLE
      serverCertificate: /etc/istio/ingressgateway-certs/tls.crt
      privateKey: /etc/istio/ingressgateway-certs/tls.key
    hosts:      
    - bookinfo.{{ bookinfo_domain }}
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: bookinfo
spec:
  hosts:
  - bookinfo.{{ bookinfo_domain }}
  gateways:
  - bookinfo-gateway
  http:
  - match:
    - uri:
        exact: /productpage
    - uri:
        exact: /login
    - uri:
        exact: /logout
    - uri:
        prefix: /api/v1/products
    route:
    - destination:
        host: productpage
        port:
          number: 9080           
